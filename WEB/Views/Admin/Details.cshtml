@model BLL.DTO.SaleInfoDTO

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Details</h2>
    <div class="table table-bordered">
        <h4>SaleInfo ID: @Model.SaleInfoId by manager @Model.ManagerName</h4>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ProductName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ProductName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ProductPrice)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ClientName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ClientName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DateOfSale)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DateOfSale)
            </dd>

        </dl>
    </div>
    
<div id="chart_container">
    <p>Chart's for manager @Model.ManagerName --- Summ of sales : @ViewBag.Summ $</p>
    <canvas id="bar_chart"></canvas>
</div>

<div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.SaleInfoId }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.SaleInfoId }) |
    @Html.ActionLink("Back to List", "Statistics", "Home")
</p>
</div>

@section scripts
{
    <script src="~/Scripts/Chart.min.js" type="text/javascript"></script>
    <script>
        var productsArray = @Html.Raw(Json.Encode(ViewBag.Products));
        var count = @Html.Raw(Json.Encode(ViewBag.Count));
        var ctx = $("#bar_chart");
        var coloR = [];
        var borderColor = [];
        var dynamicColors = function() {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgb(" + r + "," + g + "," + b + ")";
        };
        for (var i in productsArray) {
            coloR.push(dynamicColors());
            borderColor.push(dynamicColors());
        }
        var barChart = new Chart(ctx,
            {
                type: 'bar',
                data: {
                    labels: productsArray,
                    datasets: [
                        {
                            label: "Sold $",
                            data: count,
                            backgroundColor: coloR,
                            borderColor: borderColor,
                            borderWidth: 1.5
                        }]
                },
                options: {
                    maintainAspectRatio : false,
                    scales: {yAxes:[{ticks:{beginAtZero:true} }] },
                    legend: {display: false}
                },
            });
    </script>
}
